# üìã StoryWeave Chronicles ‚Äì Project TODO List (September 17, 2025)

## ‚úÖ Completed & Stable
- Newsletter feature added
- Export/import bookmarks implemented
- Carousel mobile issues fixed (desktop/mobile both usable, needs polish)
- Database migrated to Neon (persistent, fast cover loading)
- Cover caching system optimized and stress tested
- RAM usage optimized (open to further improvements)
- Made a new cover system for the sake of being super optimized. (way faster and using way less memory if you can get over the first dry launch)
- managed to finally clean up and organize my back end. (will do the same for the front end once its completely stable)

---

## ‚òê Remaining Bugs & Improvements
- Routing/refresh error: attempted fix, still unresolved (production, Render.com)
- Carousel UI: polish for desktop and mobile
- for advertising: propellerads, adsterra, and revenuehits are the ones i want to look at the most.
- for OAuth and login credentials: firebase and clerk
- for new Mail provider: sendgrid or mailgun (can integrate with flaskmail)
- Minor bugs: address issues found during stress testing
- Front end keeps polling after all covers are done downloading
- churn is back. it fixed itself for a bit and now its back.

---

## üöÄ Future Goals
- Continue monitoring and optimizing RAM/CPU usage
- Add admin tools: logs, rate limiting, restore deleted content, user activity overview
- Set up automated alerts for memory, queue length, error rates
- Consider service workers for offline access
- General UI polish and performance enhancements
- Username changes (stretch goal, not prioritized)
- cleanup and organize front end

---
## Deployment Constraints

- **Render Free Tier:**  
  - 256 MB RAM, 0.1 CPU, 100 connections per instance.
  - 750 free instance hours/month.
  - Services spin down after 15 minutes inactivity.
  - PostgreSQL: 1GB, expires every 30 days (moved to neon, no need to worry about this).
---

**Summary:**  
Most major features and optimizations are complete. Focus now shifts to bug fixes, UI polish, admin tools, and ongoing performance improvements. Let me know which item you want to tackle next!

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

for definition so that we are on the same page: i am defining churn as = if the site deletes needed covers and then redownloads them wasting resources and time.
so with my react site, i have an atlas and a folder full of covers. the image name is the <cover id>.jpg. for some reason, it will do a comparison on the landing page list
remove covers that are in the folder believing it doesn't need them, realizes it DOES need those covers, and will redownload them. that is a churn to me.
if it were to delete, redownload, delete, redownload, that is 2 churns.

with definitions out of the way, i have had a churn problem every time i refresh the landing page. i can get all covers up and running perfectly. if i refresh to test,
the site for some reason deletes 10 covers saying they are not valid cause they dont exist. it then redownloads new versions. this is using up resources i can be putting
towards something else. remember i am deployed on render.com free tier. that doesn't give me a lot of resources to work with. so i need to make things as efficient and 
optimized as possible. which is why i want this churn gone!

(for memories sake:
- **Render Free Tier:**  
  - 256 MB RAM, 0.1 CPU, 100 connections per instance.
  - 750 free instance hours/month.
  - Services spin down after 15 minutes inactivity.
  - PostgreSQL: 1GB, expires every 30 days.)

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2025-09-17 18:21:41,827 INFO 127.0.0.1 - - [17/Sep/2025 18:21:41] "OPTIONS /api/has-new-notifications HTTP/1.1" 200 -
2025-09-17 18:21:42,157 INFO 127.0.0.1 - - [17/Sep/2025 18:21:42] "POST /api/has-new-notifications HTTP/1.1" 500 -
Traceback (most recent call last):
  File "C:\Users\nchow\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\nchow\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\engine\default.py", line 951, in do_execute
    cursor.execute(statement, parameters)
psycopg2.OperationalError: SSL connection has been closed unexpectedly


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\nchow\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\nchow\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\nchow\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\flask_cors\extension.py", line 176, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
                                                ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\nchow\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\nchow\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\nchow\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\flask_cors\extension.py", line 176, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
                                                ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\nchow\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\nchow\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]   
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^   
  File "C:\Users\nchow\source\repos\storyweavechronicles\server\server.py", line 878, in has_new_notifications
    user = User.query.filter_by(username=username).first()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\nchow\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\orm\query.py", line 2759, in first
    return self.limit(1)._iter().first()  # type: ignore
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\nchow\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\orm\query.py", line 2857, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\nchow\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\orm\session.py", line 2365, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\nchow\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\orm\session.py", line 2251, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\nchow\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\orm\context.py", line 306, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\Users\nchow\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\engine\base.py", line 1419, in execute
    return meth(
           ^^^^^
  File "C:\Users\nchow\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\sql\elements.py", line 526, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\nchow\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\engine\base.py", line 1641, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\nchow\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\nchow\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\Users\nchow\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\engine\base.py", line 2355, in _handle_dbapi_exception        
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\nchow\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\nchow\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sqlalchemy\engine\default.py", line 951, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) SSL connection has been closed unexpectedly      

[SQL: SELECT "user".id AS user_id, "user".username AS user_username, "user".email AS user_email, "user".password AS user_password, "user".bookmarks AS user_bookmarks, "user".secondary_emails AS user_secondary_emails, "user".background_color AS user_background_color, "user".text_color AS user_text_color, "user".font AS user_font, "user".timezone AS user_timezone, "user".notification_prefs AS user_notification_prefs, "user".notification_history AS user_notification_history, "user".comments_page_size AS user_comments_page_size, "user".is_admin AS user_is_admin, "user".banned AS user_banned
FROM "user"
WHERE "user".username = %(username_1)s
 LIMIT %(param_1)s]
[parameters: {'username_1': 'nixodemus1', 'param_1': 1}]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
ok, lets try this one more time. things got a little bit messed up. so: i think last time things got messed up cause we tried to make ALL the changes in one go. this time, lets try and do this section by section. that should make it easier and also prevent the same problem happening again. im going to put the list below again. but instead of trying to do all of it. organize the first section. and then we'll do the next. and the next. and so on so forth till we have organized the whole file. just like i said before I have actually gone ahead and added "#--- apis ---" so that you know where the apis start. dont change anything above that comment, and dont change anything below "if __name__ == '__main__':" at the very bottom. just the end points in the middle being organized, and do it section by section. here is the message again:
```
Here‚Äôs a categorized list of your Flask endpoints from `server.py`.  
I‚Äôve grouped them by their most likely purpose. If any endpoint is unclear or miscategorized, let me know and I‚Äôll update the list.

---

### Authentication & User Management
- `/api/login`
- `/api/register`
- `/api/change-password`
- `/api/get-user`
- `/api/update-profile-settings`
- `/api/export-account`
- `/api/import-account`
- `/api/add-secondary-email`
- `/api/remove-secondary-email`
- `/api/get-user-meta`

### Admin & Moderation
- `/api/admin/make-admin`
- `/api/admin/remove-admin`
- `/api/admin/bootstrap-admin`
- `/api/admin/send-emergency-email`
- `/api/admin/send-newsletter`
- `/api/admin/ban-user`
- `/api/admin/unban-user`

### Book & PDF Management
- `/list-pdfs/<folder_id>`
- `/api/all-books`
- `/api/user-voted-books`
- `/api/books`
- `/api/top-voted-books`
- `/api/user-top-voted-books`
- `/api/update-external-id`
- `/api/seed-drive-books`
- `/pdf-cover/<file_id>`
- `/api/cover-exists/<file_id>`
- `/api/simulate-cover-load`
- `/covers/<cover_id>.jpg`
- `/api/landing-page-book-ids`
- `/api/rebuild-cover-cache`
- `/api/cover-diagnostics`

### Voting
- `/api/vote-book`
- `/api/book-votes`

### Bookmarks
- `/api/get-bookmarks`
- `/api/add-bookmark`
- `/api/remove-bookmark`
- `/api/update-bookmark-meta`

### Comments
- `/api/add-comment`
- `/api/edit-comment`
- `/api/delete-comment`
- `/api/get-comments`
- `/api/has-new-comments`
- `/api/vote-comment`
- `/api/get-comment-votes`
- `/api/user-comments`
- `/api/moderate-comment`

### Notifications
- `/api/get-notification-prefs`
- `/api/update-notification-prefs`
- `/api/get-notification-history`
- `/api/notification-history`
- `/api/notify-reply`
- `/api/notify-new-book`
- `/api/notify-book-update`
- `/api/notify-app-update`
- `/api/mark-all-notifications-read`
- `/api/delete-notification`
- `/api/dismiss-all-notifications`
- `/api/mark-notification-read`
- `/api/delete-all-notification-history`
- `/api/test-send-scheduled-notifications`
- `/api/has-new-notifications`

### Health & Diagnostics
- `/api/cover-queue-health`
- `/api/server-health`
- `/api/health`
- `/api/cover-diagnostics`

### Queue & Session Management
- `/api/cancel-session`
- `/api/pdf-text/<file_id>`

### Webhooks & Integrations
- `/api/drive-webhook`
- `/api/github-webhook`
- `/authorize`

### Static & Fallback
- `/covers/<cover_id>.jpg`
- `/` and `/<path:path>` (serves React frontend)

---

If you want more granularity or clarification for any endpoint, just ask!

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
